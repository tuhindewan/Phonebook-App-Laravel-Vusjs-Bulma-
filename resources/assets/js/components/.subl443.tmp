<template>
	<div>
		<nav class="panel column is-offset-2 is-8">
		  <p class="panel-heading">
		    Vuejs Phonebook
		    <button class="button is-link is-outlined" @click="addNew">
		      Add New
		    </button>
		  </p>
		  <div class="panel-block">
		    <p class="control has-icons-left">
		      <input class="input is-small" type="text" placeholder="search" v-model="searchQuery">
		      <span class="icon is-small is-left">
		        <i class="fa fa-search" aria-hidden="true"></i>
		      </span>
		    </p>
		  </div>
		  <a class="panel-block is-active" v-for="item,key in items">
	    	<div class="column is-9">
	    		{{ item.name }}
	    	</div>
	    	<div class="column has-text-danger panel-icon is-1">
	    		<i class="fa fa-trash" aria-hidden="true" @click="del(key,item.id)"></i>
	    	</div>
	    	<div class="column has-text-info  panel-icon is-1">
	    		<i class="fa fa-edit" aria-hidden="true" @click="openUpdate(key)"></i>
	    	</div>
	    	<div class="column has-text-primary panel-icon is-1">
	    		<i class="fa fa-eye" aria-hidden="true" @click="openShow(key)"></i>
	    	</div>
		  </a>
		</nav>

		<add :openModal="addActive" @cancelRequest="close"></add>
		<show :openModal="showActive" @cancelRequest="close"></show>
		<update :openModal="updateActive" @cancelRequest="close"></update>

	</div>
</template>

<script>
let add = require('./add.vue');
let show = require('./show.vue');
let update = require('./update.vue');
	export default{
		components:{add,show,update},
		data(){
			return{
				addActive : '',
				showActive : '',
				updateActive : '',
				items :{},
				errors : {},
				searchQuery : "",
				temp : ""
			}
		},
		watch : {
			searchQuery(){
				if(this.searchQuery.length > 0){
					this.items = this.items.filter((item) =>
					    {
					    	return item.name.toLowerCase().indexOf(this.searchQuery.toLowerCase()) > -1
					    }
					  );
				}
			},
		},
		mounted(){
			axios.post('/getData').then((response)=> this.items = response.data)
			  .catch((error)=>this.errors = error.response.data);
		},
		methods:{
			addNew(){
				this.addActive = 'is-active';
			},
			openShow(key){
				this.$children[1].item = this.items[key];
				this.showActive = "is-active";
			},
			openUpdate(key){
				this.$children[2].item = this.items[key];
				this.updateActive = "is-active";
			},
			del(key,id){
				axios.delete('/phonebook/${id}').then((response)=> this.items.splice(key,1))
				  .catch((error)=>this.errors = error.response.data);
			},
			close(){
				this.addActive = this.showActive= this.updateActive = "";
			}
		}
	}
</script>